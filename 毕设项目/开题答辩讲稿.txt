大家好，我是本次答辩人xx，我的指导老师是王老师。
我的答辩题目是：融创富文本音视频集合的文档社区平台
接下来，我将从以下几个方面进行答辩
首先是
01 背景意义
随着互联网技术的发展，
传统的文档社区平台，难以满足用户多样化的信息需求。
因此，设计一个融合富文本、音视频的文档社区平台，
具有重要的现实意义。

02 主要内容
本次设计的主要内容就是，
实现一个功能完备、界面友好的文档社区平台。
提供前后端分离的架构，支持用户登录注册、个人信息管理、文章创作与发布
支持富文本编辑、音视频播放等高级功能，满足用户对文档处理的多样化需求。
实现文档的分类管理及搜索，方便用户管理个人文档。
拥有合理的用户互动模块，增强用户间的交流与合作。

02 主要内容
主要分为以下几个模块，
账户管理：用户可以登录注册。可以修改个人资料，如头像昵称。
文件管理：支持多种格式的文件上传和下载。
文档编辑：支持富文本的编辑与发布，包括图片、音视频的插入。
互动功能：用户可以关注其他用户，对喜欢的内容进行点赞、收藏、评论、转发。
后台功能：管理员可以审核用户发布的内容。并对文档内容进行分类管理。

03 技术路线
在技术选择方面，
我采用的是以Vue+ElementUI为前端框架，
Springboot+Mybatis为后端框架的开发方案，
这些技术能够满足各种复杂的业务需求。

03 技术路线
系统主要包括以下的几个业务板块。
 
登录注册板块：实现用户、管理员的登录注册，
在这个板块可以使用JWT完成一个登录鉴权，作为登录相关功能的优化。
也就是后端会采用一个加密算法为每一个注册用户生成唯一token，
用户登录时在前端输入信息，传递到后端，后端再通过对信息反解码来验证用户身份是否正确。

数据项管理板块：主要就是对各种数据项的 CRUD 操作，比如，
如果用户登录系统，那么他可以对自己的文件、文章进行管理，
如果是管理员登录，管理员还可以对用户信息进行管理。

文件上传下载板块：
本次设计可以支持多种格式的文件上传和下载，
后端可以采用 MultipartFile 处理文件上传请求。
这是一个用于处理文件上传的接口，
使用它可以在一定程度上简化上传操作。

富文本集成板块：
可以引入Tiny 或 Quill 这样的富文本编辑器，
它们能够很好的支持音视频的插入和预览
kkFileView 万能预览
OnlyOffice 文档在线协同

04 重点难点
本次设计的重点也是主要功能，
主要包括富文本编辑、文件上传下载、文件在线预览、用户互动功能。
本次设计的难点主要体现在，
对于富文本编辑器，和不同格式的文件预览，需要正确熟悉和使用第三方库
对于不同格式文件的上传下载，需要正确存储和引用多媒体资源
对于不同多用户的互动管理，需要完成后端复杂的处理逻辑。

我的答辩完毕，
请老师们进行点评。

--------------------------------------
--------------------------------------
答题模式：
首先在springboot后端，需要定义相关的实体类和数据库结构，
包括一些字段，接着编写相关的接口，
在vue前端，设计相关界面和一些按钮，点击按钮时，
可以通过axios等工具调用这些接口，将前端数据传至后端，
其中可能包括前端绑定用户输入的一些参数，
后端就需要更新用于接收前端数据的实体类，还要更新数据库字段，
当后端接收到前端请求后，再通过服务层更新数据库或查找数据库内容，
并将结果返回到前端，前端获取到资源即可展示到页面
--------------------------------------
（JSON Web Token）头部（Header）、载荷（Payload）和签名（Signature）
Header.Payload.Signature
--------------------------------------
提问：
创新点在于？
我的设计项目主要是集成了一些很基础，但也比较重要常用的功能，
虽然说网上已经有很多案例，但是对我来说是一个全新的尝试，
里面也有很多技术点值得我去学习，而且也说明了这些功能虽然基础，
但是却是不可或缺的功能。因为我的这个项目是一个文档社区平台，它的特点就是
不同于单一的图文内容，还支持用户嵌入音视频这样的功能，也能上传不同格式的文件。
特别是在教学、设计领域，多样化的形式，能够让用户更好地传达表达自己的思想。
而单纯的文字或者是单纯的视频其实都有各自的缺点，我的出发点就是为了弥补这样的不足，
在传统的文档社区上加以创新。虽然每一个功能拆开看很简单，但是要将他们全部实现也并不容易。
OnlyOffice 文档在线协同：
ONLYOFFICE 文档 是一个开源办公套件，包括文本文档、电子表格、演示文稿和可填写表单的编辑器。 

如何实现富文本插入音视频？
使用集成的富文本编辑器如TinyMCE或Quill

如何实现在线预览与播放？
如果是富文本编辑器，则使用它自带的功能解决，
如果是自定义上传的文件，可以使用
kkFileView 万能预览：
kkFileView 是一个基于 Spring Boot 框架构建的文件文档在线预览解决方案，支持多种主流办公文档的在线预览，包括但不限于 doc、docx、xls、xlsx、ppt、pptx、pdf、txt、zip、rar、图片、视频、音频等。

它提供以下功能：
创建、编辑和查看文本文档、电子表格、演示文稿和可填写表单；
与其他队友实时协作处理文件。

如何实现分类管理？
首先在springboot后端，需要创建分类实体类，包含分类名称、描述、父分类id等属性，以及相应的数据库表结构。
然后编写分类的增删改查接口，
如添加分类时接收分类信息并存入数据库，
删除分类则根据id进行删除操作，
修改分类可更新指定id的分类信息，
查询接口可实现获取所有分类列表或根据条件查询特定分类等功能。
在vue前端，通过axios等工具调用这些接口，
页面上设计分类管理界面，和展示分类列表区域，
设置可操作的按钮，通过调用查询接口获取数据并渲染

如何实现分享？
首先在springboot后端，需要创建一个用于生成和管理分享连接的接口，
这个接口可以根据特定的资源或信息生成一个唯一的分享链接，
该链接可以包含一些必要的参数，如资源id、用户信息等，用于后续的访问和验证。
后端还需要有相应的接口来处理通过分享链接访问的请求，
根据链接中的参数获取对应的信息，并进行权限验证等操作，
确保只有合法的访问请求才能获取到资源。

如何实现评论？
springboot后端需创建评论实体类，含评论内容、用户id、评论时间、关联资源id等属性，并映射数据库表。
编写评论相关接口，
如添加评论接口，接收评论信息存入数据库，
查询评论接口，按资源id等条件获取评论列表。
前端vue页面上，对应区域设置评论输入框和提交按钮，用户填写评论后点击提交，
前端调用添加评论接口将数据传至后端。
同时，页面还需展示评论列表，通过调用查询评论接口获取数据并渲染，
可按时间排序等，让用户能查看到其他用户的评论内容，实现用户间的互动交流。

如何实现管理员审核？
首先在springboot后端，需要定义审核相关的实体类和数据库结构，
例如可以有一个审核任务实体类，包含审核内容、审核状态、提交时间、审核人等字段。
接着编写审核相关的接口，
比如提交审核接口，用于将待审核的内容（如用户提交的信息、发布的文章等）存入数据库并标记为待审核状态；
审核操作接口，管理员通过这个接口可以对审核任务进行操作，如通过、拒绝等，并更新审核状态和相关信息。
在vue前端，
对于普通用户，提供提交审核的入口，如在信息填写完成后有一个提交审核的按钮，点击后调用提交审核接口；
对于管理员，设计一个审核管理界面，通过调用接口获取待审核的任务列表展示出来，任务旁边有审核操作按钮，
管理员选择审核结果并提交，前端调用审核操作接口将审核结果反馈给后端，
后端根据审核结果更新数据库中的审核状态，从而完成整个管理员审核流程。

题目是文档社区，何处体现文档管理？


--------
一个评论系统主要包含评论人，评论时间，评论内容，评论回复等内容。每条评论可能存在多条回复，每条回复又可能存在多条回复，即是一个多叉树的关系。因此，难点如下：
确定并存储评论与回复的层级关系以及与博客本章的从属关系
多层级评论与回复的前端递归显示
多层级评论与回复的递归删除

采用分层架构设计，包括数据层、服务层、控制层和表现层。
数据层负责存储文档、用户信息、音视频文件等数据；
服务层提供数据处理、业务逻辑等服务；
控制层协调各层之间的交互；
表现层则负责用户界面展示与用户交互。

前端界面使用Vue快速搭建框架，启动Vue工程，
引入Element-UI组件开发前台页面，通过配置路由管理网站各大模块。
Vue安装axios，封装request，向后端发送请求，
前端接收到后端返回数据，即可在可视化页面上显示到用户。
后端使用SpringBoot3创建Web工程，
基于Maven依赖引入mybatis和mysql以及各种常用工具，
利用可视化工具Navicat操作数据库表，
结合Mybatis持久层框架构建服务，实现对数据项查询、新增、编辑、删除的管理，
并向前端返回数据。